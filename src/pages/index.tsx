import { Prisma } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import { NoteCard } from "~/components/NoteCard";
import { NoteForm } from "~/components/NoteForm/NoteForm";
import { ToDoList } from "~/components/NoteForm/ToDo/ToDoList";
import { deviceId } from "~/lib/deviceId";
import { Note, ToDo } from "~/lib/types";
import { api } from "~/utils/api";

const mockTodos = [
  {
    id: "1",
    label: "Buy milk",
    done: false,
  },
  {
    id: "2",
    label: "Buy eggs",
    done: false,
  },
  {
    id: "3",
    label: "Buy bread",
    done: false,
  },
];

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const create = api.note.create.useMutation();

  const getNotes = api.note.getAll.useQuery({
    deviceId: deviceId(),
  });

  const notes = getNotes.data;

  console.log({ notes });

  const createNote = (note: Note, todos: ToDo[]) => {
    create.mutate({
      ...note,
      title: note.title ?? undefined,
      deviceId: deviceId(),
      todos,
    });
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="dark grid h-screen w-screen place-content-center bg-slate-800">
        <NoteForm onSubmit={createNote} />
        <div className="mt-4 flex  max-h-[calc(100vh-64px)] flex-col gap-4 overflow-y-auto">
          {notes?.map((note) => (
            <NoteCard key={note.id} note={note} />
          ))}
        </div>
      </main>
    </>
  );
};

export default Home;
